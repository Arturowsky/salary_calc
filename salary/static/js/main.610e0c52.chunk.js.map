{"version":3,"sources":["Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["accomodate","roomtype","price","Calculator","useState","numberHours","setNumberHours","perHour","setPerHour","tax","setTax","currency","setCurrency","checkDisabled","setCheckDisabled","housing","setHousing","fetch","then","response","json","data","rates","mid","money","netto","pln","className","type","placeholder","onChange","e","target","value","onClick","disabled","console","log","map","option","index","toFixed","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAGMA,EAAa,CACf,CACIC,SAAU,SACVC,MAAO,MAEX,CACID,SAAU,SACVC,MAAO,OA8EAC,EA1EI,WACf,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,IAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAAgCN,mBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA0CR,oBAAS,GAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAA8BV,mBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KAsBAC,MAAM,oDACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIT,EAAYS,EAAKC,MAAM,GAAGC,QACxC,IAAMC,EAASnB,EAAcE,EAGvBkB,EAAQD,EAFIf,EAAM,IAAQe,EACf,KAC2BT,EACtCW,EAAMD,EAAQd,EACpB,OAAQ,sBAAKgB,UAAU,gBAAf,UACJ,qBAAKA,UAAU,sBAAf,SACA,sBAAKA,UAAU,2BAAf,UAA0C,0CAAY,iDAElD,sBAAKA,UAAU,WAAf,UACI,uBAAOC,KAAK,SAASC,YAAY,MAAMC,SAjCrC,SAAAC,GACVzB,EAAeyB,EAAEC,OAAOC,UAiChB,4DAEJ,sBAAKN,UAAU,WAAf,UACI,uBAAOC,KAAK,SAASC,YAAY,MAAMC,SAlChC,SAAAC,GACfvB,EAAWuB,EAAEC,OAAOC,UAkCZ,iDAEJ,sBAAKN,UAAU,WAAf,UACI,uBAAOC,KAAK,SAASC,YAAY,KAAKC,SAnCpC,SAAAC,GACVrB,EAAOqB,EAAEC,OAAOC,UAmCR,yDAEJ,sBAAKN,UAAU,iBAAf,UACI,qBAAKA,UAAU,SAAf,SAAwB,uBAAOC,KAAK,WAAWM,QApCtC,WACjBpB,GAAkBD,IACI,IAAlBA,GACJG,EAAW,IACW,IAAlBH,GACJG,EAAW,WAgCH,iDAEJ,sBAAKW,UAAU,kBAAf,UACI,wBAAQQ,SAAUtB,EAAeoB,MAAOlB,EAASe,SAjC1C,SAAAC,GACff,EAAWe,EAAEC,OAAOC,OACpBG,QAAQC,IAAItB,IA+BJ,SAAwEf,EAAWsC,KAAI,SAACC,EAAQC,GAAT,OACjF,wBAAoBP,MAAOM,EAAOrC,MAAlC,SACCqC,EAAOtC,UADKuC,QAInB,8CAEJ,qBAAIb,UAAU,MAAd,UAAqBF,EAAMgB,QAAQ,GAAnC,qBAIJ,qBAAKd,UAAU,sBAAf,SAAqC,gCAAK,8CAAiBhB,KAAa,qBAAIgB,UAAU,OAAd,UAAsBD,EAAIe,QAAQ,GAAlC,qBACxE,iCAAQ,iICrEDC,MATf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,OCISgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.610e0c52.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\nconst accomodate = [\r\n    {\r\n        roomtype: \"Single\",\r\n        price: 2700\r\n    },\r\n    {\r\n        roomtype: \"Double\",\r\n        price: 1700\r\n    }\r\n]\r\n\r\nconst Calculator = () => {\r\n    const [numberHours, setNumberHours] = useState(0);\r\n    const [perHour, setPerHour] = useState(0);\r\n    const [tax, setTax] = useState(34);\r\n    const [currency, setCurrency] = useState(0)\r\n    const [checkDisabled, setCheckDisabled] = useState(true)\r\n    const [housing, setHousing] = useState(0)\r\n\r\n    const Hours = e => {\r\n        setNumberHours(e.target.value);\r\n    }\r\n    const HourlyWage = e => {\r\n        setPerHour(e.target.value);\r\n    }\r\n    const Taxes = e => {\r\n        setTax(e.target.value)\r\n    }\r\n    const CheckboxFlag = () => {\r\n        setCheckDisabled(!checkDisabled)\r\n        if (checkDisabled === false) \r\n        setHousing(0)\r\n        if (checkDisabled === true) \r\n        setHousing(2700)\r\n    }\r\n    const ChooseRoom = e => {\r\n        setHousing(e.target.value)\r\n        console.log(housing)\r\n    }\r\n    fetch('http://api.nbp.pl/api/exchangerates/rates/a/nok/')\r\n    .then(response => response.json())\r\n    .then(data => setCurrency(data.rates[0].mid));\r\n    const money = (numberHours * perHour) \r\n    const minusTax = (tax / 100 ) * money\r\n    const foodcost = 20 * 55\r\n    const netto = money - minusTax - foodcost - housing\r\n    const pln = netto * currency\r\n    return (<div className=\"app-container\">\r\n        <div className=\"app-container-upper\">\r\n        <div className=\"app-container-upper-grid\"><h1>Salary  <span>Calculator</span></h1>\r\n\r\n            <div className=\"app-form\">\r\n                <input type=\"number\" placeholder=\"156\" onChange={Hours}/>\r\n                <h3>Number of working hours</h3>\r\n            </div>\r\n            <div className=\"app-form\">\r\n                <input type=\"number\" placeholder=\"256\" onChange={HourlyWage} />\r\n                <h3>NOK per hour</h3>\r\n            </div>\r\n            <div className=\"app-form\">\r\n                <input type=\"number\" placeholder=\"34\" onChange={Taxes} />\r\n                <h3>Tax (34% by default)</h3>\r\n            </div>\r\n            <div className=\"app-form-check\">\r\n                <div className=\"-check\"><input type=\"checkbox\" onClick={CheckboxFlag} /></div>\r\n                <h3>Accomodation</h3>\r\n            </div>\r\n            <div className=\"app-form-select\" >\r\n                <select disabled={checkDisabled} value={housing} onChange={ChooseRoom}>{accomodate.map((option, index) => (\r\n                      <option key={index} value={option.price}>\r\n                      {option.roomtype}\r\n                      </option>\r\n                    ))}</select>\r\n                <h3>Room type</h3>\r\n            </div>\r\n            <h2 className=\"red\">{netto.toFixed(0)} nok netto</h2>\r\n        </div>\r\n        \r\n        </div>\r\n        <div className=\"app-container-lower\"><div><p>exchange for {currency}</p><h2 className=\"blue\">{pln.toFixed(2)} pln netto</h2></div></div>\r\n        <footer><p>Food cost is automaticaly counted by multiplay 55 nok per day for average  20 working days</p></footer>\r\n        </div>)\r\n\r\n}\r\n\r\nexport default Calculator","\nimport './App.css';\n\nimport Calculator from \"./Calculator\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}